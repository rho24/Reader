@using Reader.Infrastructure
@model dynamic

@{
    ViewBag.Title = "title";
}

<div class="row-fluid fill">
    <div class="span3 well sidebar">
        <!--Sidebar content-->
        <ul class="nav nav-list">
            <li><a class="btn" data-bind="click: getFeeds">Get Feeds</a></li>
            <li class="nav-header">Feeds</li>
            
            <!-- ko template: { name: feeditemTemplateChooser, foreach: feeds } --><!-- /ko -->
        </ul>
    </div>
    <div class="span9 well body fill">
        <!--Body content-->
        <ul class="nav nav-tabs nav-stacked">
            <li class="nav-header" data-bind="text: selectedFeed.name"></li>
            <!-- ko foreach: selectedFeed.posts -->
            <li><a href="#" data-bind="text: name"></a></li>
            <!-- /ko -->
        </ul>
    </div>
</div>

@section scripts {
    <script type="text/javascript">

        ko.trackDeep = function(obj, propertyNames) {
            if (obj === undefined)
                return;

            if (obj instanceof Array) {
                obj.forEach(function(item) {
                    ko.trackDeep(item, propertyNames);
                });
            } else if (obj instanceof Object && !(obj instanceof Function)) {
                (propertyNames || Object.getOwnPropertyNames(obj)).forEach(function(propertyName) {
                    ko.trackDeep(obj[propertyName], propertyNames);
                });
                ko.track(obj);
            }
        };

        $(function() {

            var feedItem = function(data) {
                var that = this;

                this.isGroup = data.isGroup;
                this.name = data.name;
                this.nodes = _.map(data.nodes, function(node) {
                    return new feedItem(node);
                });

                this.selectFeed = function() {
                    $.get('@Url.HttpRouteUrl("DefaultApi", new {controller = "Feed"})' + '/' + that.name, function(data) {
                        ko.trackDeep(data);
                        model.selectedFeed = data;
                    });
                };

                this.isSelected = function() {
                    return model.selectedFeed.name === that.name;
                };

                return this;
            };

            var model = {
                feeds: _.map($.parseJSON('@Extensions.ToJson(Model.feeds)'), function (node) {
                    return new feedItem(node);
                }),
                selectedFeed: {
                    name: 'Haacked',
                    posts: [
                        { name: 'Post 1 - This is a wonderful post' },
                        { name: 'Post 2 - This is a wonderful post' },
                        { name: 'Post 3 - This is a wonderful post' },
                        { name: 'Post 4 - This is a wonderful post' },
                        { name: 'Post 5 - This is a wonderful post' },
                        { name: 'Post 6 - This is a wonderful post' }]
                },
                getFeeds: function() {
                    $.get('@Url.HttpRouteUrl("DefaultApi", new {controller = "UserFeeds"})', function(data) {
                        ko.trackDeep(data);
                        model.feeds = data;
                    });
                },
                feeditemTemplateChooser: function(node) {
                    if (node.isGroup)
                        return 'feedgroupitem-template';
                    else
                        return 'feeditem-template';
                }
            };
            
            window.viewModel = model;

            ko.trackDeep(model);

            ko.applyBindings(model);
        });

    </script>
    
    <script type="text/html" id="feeditem-template">
        <li data-bind="css: { active: isSelected() }"><a href="#" data-bind="    text: name, click: selectFeed"></a></li>
    </script>
    
    <script type="text/html" id="feedgroupitem-template">
        <li>
            <ul class="nav nav-list">
                <li class="nav-header" data-bind="text: name"></li>
                <!-- ko template: { name: $root.feeditemTemplateChooser, foreach: nodes } --><!-- /ko -->
            </ul>
        </li>
        <li class="divider"></li>
    </script>
}